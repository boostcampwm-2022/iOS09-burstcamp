name: build

env:
  PROJECT: 'burstcamp'

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: macos-12
    strategy:
        matrix:
          include:
            - xcode: "14.0"
              ios: "16.0"
              simulator: "iPhone 13 Pro"

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Create secret file
      env:
          FIREBASE_SECRET: ${{ secrets.FIREBASE_SECRET }}
          API_SECRET: ${{ secrets.API_SECRET }}
      run: |
        echo $FIREBASE_SECRET | base64 -D -o ${{ env.PROJECT }}/GoogleService-Info.plist
        echo $API_SECRET | base64 -D -o ${{ env.PROJECT }}/Service-Info.plist
        ls -al ${{ env.PROJECT }}

    - name: Select Xcode ${{ matrix.xcode }}
      run: sudo xcode-select -switch /Applications/Xcode_${{ matrix.xcode}}.app && /usr/bin/xcodebuild -version

    - name: Cache SwiftPM
      uses: actions/cache@v3
      with:
          path: ~/Library/Developer/Xcode/DerivedData/${{ env.PROJECT }}*/SourcePackages/
          key: ${{ runner.os }}-spm-${{ hashFiles('${{ env.PROJECT }}.xcworkspace/xcshareddata/swiftpm/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

    - name: Cache DerivedData
      uses: actions/cache@v3
      with:
        path: ~/Library/Developer/Xcode/DerivedData
        key: ${{ runner.os }}-iOS_derived_data-xcode_${{ matrix.xcode }}
        restore-keys: |
          ${{ runner.os }}-iOS_derived_data-
  
    - name: Build iOS ${{ matrix.ios }} on ${{ matrix.simulator }}
      env:
        XCODEPROJ: "${{ env.PROJECT }}/${{ env.PROJECT }}.xcodeproj"
      run: >
        xcodebuild build
        -project ${{ env.XCODEPROJ }}
        -scheme burstcamp 
        -destination 'platform=iOS Simulator,OS=${{ matrix.ios }},name=${{ matrix.simulator }}'
